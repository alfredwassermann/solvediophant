#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import sys
import string
#from Numeric import *

MSG = """
 Read a KM-file generated by DISCRETA with RHS from stdin
 a dlx file to stdout
"""

if __name__ == '__main__':
    foundDims = False
    while not foundDims:
        line = sys.stdin.readline().strip()
        if not (line[0] == r'%' or line[0] == r'|'):
            dims = list(map(int, line.split()))
            foundDims = True

            if len(dims) == 2:
                dims.append(-1)

    if not foundDims:
        sys.stderr.write("Could not find matrix size -> exit\n")
        sys.exit(1)

    items = []
    mat = []
    r = 0
    while r < dims[0]:
        line = sys.stdin.readline().strip()
        if len(line) == 0:
            continue

        vec = list(map(int, line.split()))
        rhs = vec.pop()
        if rhs <= 0:
            print("Problem can not be solved by dlx3!", file=sys.stderr)
            sys.exit(1)
        elif rhs == 1:
            items.append("%d" % r)
        else:
            items.append("%d:%d|%d" % (rhs, rhs, r))
        mat.append(vec)
        r += 1


    # Print items line
    print(" ".join(items))

    # Print options
    rows = len(mat)
    cols = len(mat[0])
    for i in range(cols):
        vec = [j for j, row in enumerate(mat) if row[i] == 1]
        print(" ".join(map(str, vec)))
    sys.stderr.write("read %d equations\n" % r)
