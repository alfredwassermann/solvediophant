#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import sys
import string
#from Numeric import *

MSG = """
 Read a KM-file generated by DISCRETA (i.e. without RHS) from stdin
 and write a matrix to stdout
 which is readable by "newer" versions of solvediophant

 * parameter: rhs (lambda)
"""

if __name__ == '__main__':
    if len(sys.argv) < 2:
        sys.stderr.write(MSG)
        sys.exit(1)
    else:
        rhs = int(sys.argv[1])

    foundDims = False
    while not foundDims:
        line = sys.stdin.readline().strip()
        if not line[0] == r'%':
            dims = list(map(int, line.split()))
            foundDims = True

            if len(dims) == 2:
                dims.append(-1)
        else:
            print(line)

    if not foundDims:
        sys.stderr.write("Could not find matrix size -> exit\n")
        sys.exit(1)

    dims[2] = 1
    print(" ".join(map(str, dims)))

    r = 0
    while r < dims[0]:
        line = sys.stdin.readline().strip()
        print((line + "\t" + str(rhs)))
        r += 1

    sys.stderr.write("read %d equations\n" % r)

    print("BOUNDS %d" % dims[1])
    print(" ".join(["1"] * dims[1]))
